1. const std::string&是常量引用，tokenize函数不需要修改输入，临时字符串对象和字面量无法绑定到非常量引用。
   不可以使用std::string&，因为字面量无法绑定到非常量引用。

2. std::unique_ptr提供自动内存管理，防止内存泄漏，减少安全风险。
   改用普通指针要手动delete，可能造成内存泄露等安全风险。

3. 通过运算符重载实现。（子类也可通过toString方法重写）先让*token解引用unique_ptr，调用重载的<<运算符，再在运算符内部调用token.toString()。根据实际的Token子类类型，执行相应的toString输出到std::cout。

4. tokenizer.cpp中，当遇到语法错误时，会抛出SyntaxError异常，被main函数中try-catch语句捕获，将错误消息输出到std::cerr。

5. deque允许在两端高效地插入和删除元素，不要求连续内存，可以更好地处理大量元素，扩容时迭代器也更稳定。